<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NodeJS on KMS&#39;s blog</title>
    <link>https://kms-97.github.io/tags/nodejs/</link>
    <description>Recent content in NodeJS on KMS&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <managingEditor>개별설정 (개별설정)</managingEditor>
    <webMaster>개별설정 (개별설정)</webMaster>
    <lastBuildDate>Tue, 05 Oct 2021 23:00:00 +0900</lastBuildDate><atom:link href="https://kms-97.github.io/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NodeJS - 파일 시스템 접근하기</title>
      <link>https://kms-97.github.io/study/nodejs/nodejs_fs/</link>
      <pubDate>Tue, 05 Oct 2021 23:00:00 +0900</pubDate>
      <author>개별설정 (개별설정)</author>
      <guid>https://kms-97.github.io/study/nodejs/nodejs_fs/</guid>
      <description>fs모듈 NodeJS에서 파일 시스템 접근을 위해서는 파일을 생성, 삭제, 수정이 가능한 fs 모듈을 사용한다.
대부분의 메소드들이 동기/비동기로 나뉘며, 동기방식의 메소드는 Sync라는 이름이 붙어있다.
동기적 방식을 사용하면 다른 작업을 동시에 수행할 수 없으며, 비동기적 방식은 다른 작업을 병행할 수 있으며 완료된 후 매개변수로 전달된 callback 함수를 호출한다. 비동기 방식은 항상 수행 완료시 호출될 callback 함수가 작성되어야 한다.
비동기 방식 파일 쓰기 main.mjs
import fs from &amp;#39;fs&amp;#39;; const text = &amp;#39;fs.writeFile test&amp;#39; fs.</description>
    </item>
    
    <item>
      <title>NodeJS - 모듈</title>
      <link>https://kms-97.github.io/study/nodejs/nodejs_%EB%AA%A8%EB%93%88/</link>
      <pubDate>Tue, 05 Oct 2021 21:00:00 +0900</pubDate>
      <author>개별설정 (개별설정)</author>
      <guid>https://kms-97.github.io/study/nodejs/nodejs_%EB%AA%A8%EB%93%88/</guid>
      <description>모듈 기존의 NodeJS에서는 CommonJS 모듈 시스템을 채택하여 require()로 모듈을 사용했으나, 현재는 ES모듈을 지원하여 export import를 사용할 수 있다.
CommonJS CommonJS 방식을 통한 모듈 생성에는 두 가지 방법이 있다.
module.exports를 사용하는 방식과 exports를 사용하는 방법인데, 단일 객체를 내보내는 경우와 여러 객체를 내보내는 경우로 나누어 사용하게 된다.
require()을 통해 프로젝트 내부 모듈을 불러올 때는 확장자를 생략할 수 있다.
exports calculator.js
const add = (a, b) =&amp;gt; { return a + b }; const subtract = (a, b) =&amp;gt; { return a - b }; exports.</description>
    </item>
    
  </channel>
</rss>
